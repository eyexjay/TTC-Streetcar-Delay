---
title: "TTC Streetcar Delays based on Times of the Day"
subtitle: "My subtitle if needed"
author: "Isha Juneja"
thanks: "Code and data are available at: LINK."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(palmerpenguins)

library(opendatatoronto)
library(tidyverse)
library(dplyr)
library(here)
library(tinytex)

```

# Introduction

The TTC Streetcars is one of the ways people commute and get around in Toronto. However, this mode of transportation is not always predictable and can have a lot of delays depending on the time of day. This is because at different ties of day, the city experiences different traffic patterns or other operational incidents. This paper will analyze the delays for each streetcar line running so that it is easier to commute in the city and adjust for delay times so that people can reach their desired destinations on time.

# Data {#sec-data}

Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}
#| label: fig-bills
#| fig-cap: Delay Data
#| echo: false


delay_data <- read_csv(here::here("outputs/data/cleaned_ttc-streetcar-delay-2023_data.csv"), show_col_types=FALSE)


NoDelay <-
delay_data |> filter(TypeofDelay == "No delay") %>% group_by(Hour) %>% tally()
# Sorting the x-axis according to hour
NoDelay <- NoDelay[order(strptime(NoDelay$Hour, format="%H:%M")),]


SmallDelay <-
  delay_data |> filter(TypeofDelay == "Small delay") %>% group_by(Hour) %>% tally()
# Sorting the x-axis according to hour
SmallDelay <- SmallDelay[order(strptime(SmallDelay$Hour, format="%H:%M")),]


BigDelay <-
  delay_data |> filter(TypeofDelay == "Big delay") %>% group_by(Hour) %>% tally()
# Sorting the x-axis according to hour
BigDelay <- BigDelay[order(strptime(BigDelay$Hour, format="%H:%M")),]


#### Graph of TTC StreetCar Delay by the hour of the day ####


# No Delay Barplot
ggplot(NoDelay[order(NoDelay$Hour),], aes(x=Hour, y=n)) + 
  geom_bar(stat = "identity", width=0.8) 

# Small Delay Barplot
ggplot(SmallDelay[order(SmallDelay$Hour),], aes(x=Hour, y=n)) + 
  geom_bar(stat = "identity", width=0.8) 

# Big Delay Barplot
ggplot(BigDelay[order(BigDelay$Hour),], aes(x=Hour, y=n)) + 
  geom_bar(stat = "identity", width=0.8) 

```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false
# 
# analysis_data <- read_csv(here::here("outputs/data/analysis_data.csv"))
# 
# analysis_data |> 
#   ggplot(aes(x = width, y = length)) +
#   geom_point(alpha = 0.8) +
#   theme_minimal() +
#   labs(x = "Wing width (mm)",
#        y = "Wing length (mm)")
```

Talk way more about it.

# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

# library(rstanarm)
# 
# first_model <-
#   readRDS(file = here::here("outputs/models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

# modelsummary::modelsummary(
#   list(
#     "First model" = first_model
#   ),
#   statistic = "mad",
#   fmt = 2
# )
```

The data section shows that

# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this.

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {.unnumbered}

# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows...

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

# pp_check(first_model) +
#   theme_classic() +
#   theme(legend.position = "bottom")
# 
# posterior_vs_prior(first_model) +
#   theme_minimal() +
#   scale_color_brewer(palette = "Set1") +
#   theme(legend.position = "bottom") +
#   coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

# plot(first_model, "trace")
# 
# plot(first_model, "rhat")
```

\newpage

# References
